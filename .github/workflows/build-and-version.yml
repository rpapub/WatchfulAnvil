name: Build and Version

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - fix/*
      - release/*
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for GitVersion

      - name: Read build-settings.json
        shell: pwsh
        run: |
          $settings = Get-Content "build-settings.json" | ConvertFrom-Json
          echo "ARTIFACT_NAME_MODE=$($settings.artifactNameMode)" >> $env:GITHUB_ENV
          echo "ARTIFACT_NAME_PREFIX=$($settings.artifactNamePrefix)" >> $env:GITHUB_ENV
          echo "UIPATH_API_FEED_URL=$($settings.uipathApiFeedUrl)" >> $env:GITHUB_ENV
          echo "UIPATH_API_FEED_NAME=$($settings.uipathApiFeedName)" >> $env:GITHUB_ENV

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install GitVersion
        run: dotnet tool install --global GitVersion.Tool

      - name: Determine Version
        run: |
          VERSION_JSON=$(dotnet-gitversion /output json)
          echo "$VERSION_JSON" > version.json  # Save to file for publish workflow
      
          FULL_VERSION=$(echo $VERSION_JSON | jq -r '.FullSemVer')
          FILE_VERSION=$(echo $VERSION_JSON | jq -r '.AssemblySemFileVer')
          ASSEMBLY_VERSION=$(echo $VERSION_JSON | jq -r '.AssemblySemVer')
      
          # Ensure NuGet Package Version is valid
          NUGET_VERSION=$(echo $VERSION_JSON | jq -r '.NuGetVersionV2')
          if [[ -z "$NUGET_VERSION" || "$NUGET_VERSION" == "null" ]]; then
            NUGET_VERSION=$FULL_VERSION
          fi
      
          # Export versions to GitHub environment variables
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV
          echo "FILE_VERSION=$FILE_VERSION" >> $GITHUB_ENV
          echo "ASSEMBLY_VERSION=$ASSEMBLY_VERSION" >> $GITHUB_ENV
          echo "NUGET_VERSION=$NUGET_VERSION" >> $GITHUB_ENV
      
          # Debug output
          echo "ðŸ”¹ Resolved Full Version: $FULL_VERSION"
          echo "ðŸ”¹ Resolved NuGet Version: $NUGET_VERSION"

      - name: Add UiPath API Feed
        run: |
          dotnet nuget add source "$UIPATH_API_FEED_URL" --name "$UIPATH_API_FEED_NAME"

      - name: Prepare UiPath API DLLs
        # Downloads and extracts API reference DLLs for each target framework
        # Depends on 'UiPath-Official' NuGet source being available
        run: pwsh ./tools/prepare-api-dlls.ps1

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: |
          dotnet build --configuration Release \
            /p:Version=${{ env.FULL_VERSION }} \
            /p:FileVersion=${{ env.FILE_VERSION }} \
            /p:AssemblyVersion=${{ env.ASSEMBLY_VERSION }}

      - name: Pack NuGet Package
        run: |
          dotnet pack --configuration Release --no-build --output ./nupkg \
            /p:PackageVersion=${{ env.NUGET_VERSION }} \
            /p:Version=${{ env.FULL_VERSION }} \
            /p:FileVersion=${{ env.FILE_VERSION }} \
            /p:AssemblyVersion=${{ env.ASSEMBLY_VERSION }}

      - name: Debug Build Output
        run: ls -R src/**/bin/Release/

      - name: Set Artifact Base Name
        run: |
          if [[ "$ARTIFACT_NAME_MODE" == "static" ]]; then
            CODENAME="$ARTIFACT_NAME_PREFIX"
          else
            CODENAME="${GITHUB_REPOSITORY##*/}"
          fi
          echo "REPO_CODENAME=$CODENAME" >> $GITHUB_ENV

      - name: Upload version info
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.json

      - name: Upload DLL Artifact
        uses: actions/upload-artifact@v4
        with:
          #name: ${{ env.DLL_NAME }}-${{ env.FULL_VERSION }}
          name: ${{ env.REPO_CODENAME }}.dll-${{ env.FULL_VERSION }}
          path: src/**/bin/Release/**/*.dll
          retention-days: 30

      - name: Upload NuGet Package
        uses: actions/upload-artifact@v4
        with:
          #name: ${{ env.NUPKG_NAME }}-${{ env.FULL_VERSION }}
          name: ${{ env.REPO_CODENAME }}.nupkg-${{ env.FULL_VERSION }}
          path: nupkg/**/*.nupkg
          retention-days: 30
